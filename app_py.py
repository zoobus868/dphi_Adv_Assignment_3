# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W7wCdj2tvTQNYUk-VN5giwwqhGwvDPrb
"""

from flask import Flask, render_template, request
from flask import jsonify
import requests
import pickle
import numpy as np
import sklearn
from sklearn.preprocessing import StandardScaler
app = Flask(__name__)
model = pickle.load(open('random_forest_regression_model.pkl', 'rb'))
@app.route('/',methods=['GET'])
def Home():
    return render_template('index.html')


standard_to = StandardScaler()
@app.route("/predict", methods=['POST'])
def predict():
    if request.method == 'POST':
        ApplicantIncome=float(request.form['ApplicantIncome'])
        CoapplicantIncome=float(request.form['CoapplicantIncome'])
        LoanAmount=float(request.form['LoanAmount'])
        CreditHistory=request.form['CreditHistory']
        if(CreditHistory=='Yes'):
          CreditHistory=1
        else:
          CreditHistory=0  
        Gender=request.form['Gender']
        if(Gender=='Male'):
                Gender=1
        else:
          Gender=='Female'
          Gender=0
        Married=request.form['Married']
        if(Married=='Yes'):
                Married=1
        else:
          Married='No'
          Married=0
        Dependents=request.form['Dependents']
        if(Dependents=='One'):
                Dependents_1=1
                Dependents_2=0
                Dependents_3=0
        else:
         if(Dependents=='Two'):
                Dependents_1=0
                Dependents_2=1
                Dependents_3=0
         else:
           if(Dependents=='Three'):
                Dependents_1=0
                Dependents_2=0
                Dependents_3=1


prediction=model.predict([[ApplicantIncome,CoapplicantIncome,LoanAmount,CreditHistory,Gender,Married,Dependents]])
output=round(prediction[0],2)
    
return render_template('index.html', prediction_text='Loan calculation'.format(output))

if __name__=="__main__":
    app.run(debug=True)